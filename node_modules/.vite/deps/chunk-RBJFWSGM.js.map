{
  "version": 3,
  "sources": ["../../turbo-stream/dist/turbo-stream.mjs"],
  "sourcesContent": ["// src/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred = class {\n  promise;\n  resolve;\n  reject;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// src/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing)\n    return [existing];\n  if (input === void 0)\n    return UNDEFINED;\n  if (input === null)\n    return NULL;\n  if (Number.isNaN(input))\n    return NAN;\n  if (input === Number.POSITIVE_INFINITY)\n    return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY)\n    return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0)\n    return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins } = this;\n  const str = this.stringified;\n  const partsForObj = (obj) => Object.keys(obj).map((k) => `\"${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n  switch (typeof input) {\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n      str[index] = JSON.stringify(input);\n      break;\n    case \"bigint\":\n      str[index] = `[\"${TYPE_BIGINT}\",\"${input}\"]`;\n      break;\n    case \"symbol\": {\n      const keyFor = Symbol.keyFor(input);\n      if (!keyFor)\n        throw new Error(\n          \"Cannot encode symbol unless created with Symbol.for()\"\n        );\n      str[index] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n      break;\n    }\n    case \"object\": {\n      if (!input) {\n        str[index] = `${NULL}`;\n        break;\n      }\n      const isArray = Array.isArray(input);\n      let pluginHandled = false;\n      if (!isArray && plugins) {\n        for (const plugin of plugins) {\n          const pluginResult = plugin(input);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        let result = isArray ? \"[\" : \"{\";\n        if (isArray) {\n          for (let i = 0; i < input.length; i++)\n            result += (i ? \",\" : \"\") + (i in input ? flatten.call(this, input[i]) : HOLE);\n          str[index] = `${result}]`;\n        } else if (input instanceof Date) {\n          str[index] = `[\"${TYPE_DATE}\",${input.getTime()}]`;\n        } else if (input instanceof URL) {\n          str[index] = `[\"${TYPE_URL}\",${JSON.stringify(input.href)}]`;\n        } else if (input instanceof RegExp) {\n          str[index] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n            input.source\n          )},${JSON.stringify(input.flags)}]`;\n        } else if (input instanceof Set) {\n          if (input.size > 0) {\n            str[index] = `[\"${TYPE_SET}\",${[...input].map((val) => flatten.call(this, val)).join(\",\")}]`;\n          } else {\n            str[index] = `[\"${TYPE_SET}\"]`;\n          }\n        } else if (input instanceof Map) {\n          if (input.size > 0) {\n            str[index] = `[\"${TYPE_MAP}\",${[...input].flatMap(([k, v]) => [\n              flatten.call(this, k),\n              flatten.call(this, v)\n            ]).join(\",\")}]`;\n          } else {\n            str[index] = `[\"${TYPE_MAP}\"]`;\n          }\n        } else if (input instanceof Promise) {\n          str[index] = `[\"${TYPE_PROMISE}\",${index}]`;\n          deferred[index] = input;\n        } else if (input instanceof Error) {\n          str[index] = `[\"${TYPE_ERROR}\",${JSON.stringify(input.message)}`;\n          if (input.name !== \"Error\") {\n            str[index] += `,${JSON.stringify(input.name)}`;\n          }\n          str[index] += \"]\";\n        } else if (Object.getPrototypeOf(input) === null) {\n          str[index] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input)}}]`;\n        } else if (isPlainObject(input)) {\n          str[index] = `{${partsForObj(input)}}`;\n        } else {\n          throw new Error(\"Cannot encode object with prototype\");\n        }\n      }\n      break;\n    }\n    default: {\n      const isArray = Array.isArray(input);\n      let pluginHandled = false;\n      if (!isArray && plugins) {\n        for (const plugin of plugins) {\n          const pluginResult = plugin(input);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw new Error(\"Cannot encode function or unexpected type\");\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// src/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\")\n    return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length)\n    throw new SyntaxError();\n  const startIndex = values.length;\n  values.push(...parsed);\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  switch (index) {\n    case UNDEFINED:\n      return;\n    case NULL:\n      return null;\n    case NAN:\n      return NaN;\n    case POSITIVE_INFINITY:\n      return Infinity;\n    case NEGATIVE_INFINITY:\n      return -Infinity;\n    case NEGATIVE_ZERO:\n      return -0;\n  }\n  if (hydrated[index])\n    return hydrated[index];\n  const value = values[index];\n  if (!value || typeof value !== \"object\")\n    return hydrated[index] = value;\n  if (Array.isArray(value)) {\n    if (typeof value[0] === \"string\") {\n      const [type, b, c] = value;\n      switch (type) {\n        case TYPE_DATE:\n          return hydrated[index] = new Date(b);\n        case TYPE_URL:\n          return hydrated[index] = new URL(b);\n        case TYPE_BIGINT:\n          return hydrated[index] = BigInt(b);\n        case TYPE_REGEXP:\n          return hydrated[index] = new RegExp(b, c);\n        case TYPE_SYMBOL:\n          return hydrated[index] = Symbol.for(b);\n        case TYPE_SET:\n          const set = /* @__PURE__ */ new Set();\n          hydrated[index] = set;\n          for (let i = 1; i < value.length; i++)\n            set.add(hydrate.call(this, value[i]));\n          return set;\n        case TYPE_MAP:\n          const map = /* @__PURE__ */ new Map();\n          hydrated[index] = map;\n          for (let i = 1; i < value.length; i += 2) {\n            map.set(\n              hydrate.call(this, value[i]),\n              hydrate.call(this, value[i + 1])\n            );\n          }\n          return map;\n        case TYPE_NULL_OBJECT:\n          const obj = /* @__PURE__ */ Object.create(null);\n          hydrated[index] = obj;\n          for (const key in b)\n            obj[hydrate.call(this, Number(key))] = hydrate.call(this, b[key]);\n          return obj;\n        case TYPE_PROMISE:\n          if (hydrated[b]) {\n            return hydrated[index] = hydrated[b];\n          } else {\n            const d = new Deferred();\n            deferred[b] = d;\n            return hydrated[index] = d.promise;\n          }\n        case TYPE_ERROR:\n          const [, message, errorType] = value;\n          let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n          hydrated[index] = error;\n          return error;\n        case TYPE_PREVIOUS_RESOLVED:\n          return hydrate.call(this, b);\n        default:\n          if (Array.isArray(plugins)) {\n            const args = value.slice(1).map((i) => hydrate.call(this, i));\n            for (const plugin of plugins) {\n              const result = plugin(value[0], ...args);\n              if (result)\n                return hydrated[index] = result.value;\n            }\n          }\n          throw new SyntaxError();\n      }\n    } else {\n      const array = [];\n      hydrated[index] = array;\n      for (let i = 0; i < value.length; i++) {\n        const n = value[i];\n        if (n !== HOLE)\n          array[i] = hydrate.call(this, n);\n      }\n      return array;\n    }\n  } else {\n    const object = {};\n    hydrated[index] = object;\n    for (const key in value) {\n      object[hydrate.call(this, Number(key))] = hydrate.call(\n        this,\n        value[key]\n      );\n    }\n    return object;\n  }\n}\n\n// src/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = options ?? {};\n  const done = new Deferred();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value)\n      continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, signal } = options ?? {};\n  const encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      while (Object.keys(encoder.deferred).length > 0) {\n        for (const [deferredId, deferred] of Object.entries(encoder.deferred)) {\n          if (seenPromises.has(deferred))\n            continue;\n          seenPromises.add(\n            encoder.deferred[Number(deferredId)] = raceSignal(\n              deferred,\n              encoder.signal\n            ).then(\n              (resolved) => {\n                const id2 = flatten.call(encoder, resolved);\n                if (Array.isArray(id2)) {\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                    )\n                  );\n                } else if (id2 < 0) {\n                  controller.enqueue(\n                    textEncoder.encode(`${TYPE_PROMISE}${deferredId}:${id2}\n`)\n                  );\n                } else {\n                  const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                    )\n                  );\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n              },\n              (reason) => {\n                if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                  reason = new Error(\"An unknown error occurred\");\n                }\n                const id2 = flatten.call(encoder, reason);\n                if (Array.isArray(id2)) {\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                    )\n                  );\n                } else if (id2 < 0) {\n                  controller.enqueue(\n                    textEncoder.encode(`${TYPE_ERROR}${deferredId}:${id2}\n`)\n                  );\n                } else {\n                  const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                    )\n                  );\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n              }\n            ).finally(() => {\n              delete encoder.deferred[Number(deferredId)];\n            })\n          );\n        }\n        await Promise.race(Object.values(encoder.deferred));\n      }\n      await Promise.all(Object.values(encoder.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\nfunction raceSignal(promise, signal) {\n  if (!signal)\n    return promise;\n  if (signal.aborted)\n    return Promise.reject(signal.reason || new Error(\"Signal was aborted.\"));\n  const abort = new Promise((resolve, reject) => {\n    signal.addEventListener(\"abort\", (event) => {\n      reject(signal.reason || new Error(\"Signal was aborted.\"));\n    });\n    promise.then(resolve).catch(reject);\n  });\n  abort.catch(() => {\n  });\n  return Promise.race([abort, promise]);\n}\nexport {\n  decode,\n  encode\n};\n"],
  "mappings": "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",
  "names": []
}
