import {
  init_tslib_es6,
  tslib_es6_exports
} from "./chunk-3BLBDK63.js";
import {
  dist_exports,
  esm_exports,
  init_dist2 as init_dist,
  init_esm
} from "./chunk-7X3LOV65.js";
import {
  __commonJS,
  __toCommonJS
} from "./chunk-VRMXEQCD.js";

// node_modules/@shopify/shopify-api/lib/error.js
var require_error = __commonJS({
  "node_modules/@shopify/shopify-api/lib/error.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FeatureDeprecatedError = exports.BillingError = exports.InvalidRequestError = exports.UnsupportedClientType = exports.MissingRequiredArgument = exports.SessionStorageError = exports.MissingWebhookCallbackError = exports.InvalidWebhookError = exports.InvalidSession = exports.CookieNotFound = exports.BotActivityDetected = exports.InvalidOAuthError = exports.GraphqlQueryError = exports.RestResourceError = exports.HttpThrottlingError = exports.HttpInternalError = exports.HttpRetriableError = exports.HttpResponseError = exports.HttpMaxRetriesError = exports.HttpRequestError = exports.PrivateAppError = exports.SafeCompareError = exports.InvalidDeliveryMethodError = exports.MissingJwtTokenError = exports.InvalidJwtError = exports.InvalidHostError = exports.InvalidShopError = exports.InvalidHmacError = exports.ShopifyError = void 0;
    var ShopifyError = class extends Error {
      constructor(...args) {
        super(...args);
        Object.setPrototypeOf(this, new.target.prototype);
      }
    };
    exports.ShopifyError = ShopifyError;
    var InvalidHmacError = class extends ShopifyError {
    };
    exports.InvalidHmacError = InvalidHmacError;
    var InvalidShopError = class extends ShopifyError {
    };
    exports.InvalidShopError = InvalidShopError;
    var InvalidHostError = class extends ShopifyError {
    };
    exports.InvalidHostError = InvalidHostError;
    var InvalidJwtError = class extends ShopifyError {
    };
    exports.InvalidJwtError = InvalidJwtError;
    var MissingJwtTokenError = class extends ShopifyError {
    };
    exports.MissingJwtTokenError = MissingJwtTokenError;
    var InvalidDeliveryMethodError = class extends ShopifyError {
    };
    exports.InvalidDeliveryMethodError = InvalidDeliveryMethodError;
    var SafeCompareError = class extends ShopifyError {
    };
    exports.SafeCompareError = SafeCompareError;
    var PrivateAppError = class extends ShopifyError {
    };
    exports.PrivateAppError = PrivateAppError;
    var HttpRequestError = class extends ShopifyError {
    };
    exports.HttpRequestError = HttpRequestError;
    var HttpMaxRetriesError = class extends ShopifyError {
    };
    exports.HttpMaxRetriesError = HttpMaxRetriesError;
    var HttpResponseError = class extends ShopifyError {
      constructor({ message, code, statusText, body, headers }) {
        super(message);
        this.response = {
          code,
          statusText,
          body,
          headers
        };
      }
    };
    exports.HttpResponseError = HttpResponseError;
    var HttpRetriableError = class extends HttpResponseError {
    };
    exports.HttpRetriableError = HttpRetriableError;
    var HttpInternalError = class extends HttpRetriableError {
    };
    exports.HttpInternalError = HttpInternalError;
    var HttpThrottlingError = class extends HttpRetriableError {
      constructor({ retryAfter, ...params }) {
        super(params);
        this.response.retryAfter = retryAfter;
      }
    };
    exports.HttpThrottlingError = HttpThrottlingError;
    var RestResourceError = class extends ShopifyError {
    };
    exports.RestResourceError = RestResourceError;
    var GraphqlQueryError = class extends ShopifyError {
      constructor({ message, response, headers, body }) {
        super(message);
        this.response = response;
        this.headers = headers;
        this.body = body;
      }
    };
    exports.GraphqlQueryError = GraphqlQueryError;
    var InvalidOAuthError = class extends ShopifyError {
    };
    exports.InvalidOAuthError = InvalidOAuthError;
    var BotActivityDetected = class extends ShopifyError {
    };
    exports.BotActivityDetected = BotActivityDetected;
    var CookieNotFound = class extends ShopifyError {
    };
    exports.CookieNotFound = CookieNotFound;
    var InvalidSession = class extends ShopifyError {
    };
    exports.InvalidSession = InvalidSession;
    var InvalidWebhookError = class extends ShopifyError {
      constructor({ message, response }) {
        super(message);
        this.response = response;
      }
    };
    exports.InvalidWebhookError = InvalidWebhookError;
    var MissingWebhookCallbackError = class extends InvalidWebhookError {
    };
    exports.MissingWebhookCallbackError = MissingWebhookCallbackError;
    var SessionStorageError = class extends ShopifyError {
    };
    exports.SessionStorageError = SessionStorageError;
    var MissingRequiredArgument = class extends ShopifyError {
    };
    exports.MissingRequiredArgument = MissingRequiredArgument;
    var UnsupportedClientType = class extends ShopifyError {
    };
    exports.UnsupportedClientType = UnsupportedClientType;
    var InvalidRequestError = class extends ShopifyError {
    };
    exports.InvalidRequestError = InvalidRequestError;
    var BillingError = class extends ShopifyError {
      constructor({ message, errorData }) {
        super(message);
        this.message = message;
        this.errorData = errorData;
      }
    };
    exports.BillingError = BillingError;
    var FeatureDeprecatedError = class extends ShopifyError {
    };
    exports.FeatureDeprecatedError = FeatureDeprecatedError;
  }
});

// node_modules/@shopify/shopify-api/lib/types.js
var require_types = __commonJS({
  "node_modules/@shopify/shopify-api/lib/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BillingReplacementBehavior = exports.BillingInterval = exports.privacyTopics = exports.ClientType = exports.ShopifyHeader = exports.LATEST_API_VERSION = exports.LIBRARY_NAME = exports.ApiVersion = exports.LogSeverity = void 0;
    var LogSeverity;
    (function(LogSeverity2) {
      LogSeverity2[LogSeverity2["Error"] = 0] = "Error";
      LogSeverity2[LogSeverity2["Warning"] = 1] = "Warning";
      LogSeverity2[LogSeverity2["Info"] = 2] = "Info";
      LogSeverity2[LogSeverity2["Debug"] = 3] = "Debug";
    })(LogSeverity || (exports.LogSeverity = LogSeverity = {}));
    var ApiVersion;
    (function(ApiVersion2) {
      ApiVersion2["October22"] = "2022-10";
      ApiVersion2["January23"] = "2023-01";
      ApiVersion2["April23"] = "2023-04";
      ApiVersion2["July23"] = "2023-07";
      ApiVersion2["October23"] = "2023-10";
      ApiVersion2["January24"] = "2024-01";
      ApiVersion2["April24"] = "2024-04";
      ApiVersion2["Unstable"] = "unstable";
    })(ApiVersion || (exports.ApiVersion = ApiVersion = {}));
    exports.LIBRARY_NAME = "Shopify API Library";
    exports.LATEST_API_VERSION = ApiVersion.April24;
    var ShopifyHeader;
    (function(ShopifyHeader2) {
      ShopifyHeader2["AccessToken"] = "X-Shopify-Access-Token";
      ShopifyHeader2["ApiVersion"] = "X-Shopify-API-Version";
      ShopifyHeader2["Domain"] = "X-Shopify-Shop-Domain";
      ShopifyHeader2["Hmac"] = "X-Shopify-Hmac-Sha256";
      ShopifyHeader2["Topic"] = "X-Shopify-Topic";
      ShopifyHeader2["SubTopic"] = "X-Shopify-Sub-Topic";
      ShopifyHeader2["WebhookId"] = "X-Shopify-Webhook-Id";
      ShopifyHeader2["StorefrontPrivateToken"] = "Shopify-Storefront-Private-Token";
      ShopifyHeader2["StorefrontSDKVariant"] = "X-SDK-Variant";
      ShopifyHeader2["StorefrontSDKVersion"] = "X-SDK-Version";
    })(ShopifyHeader || (exports.ShopifyHeader = ShopifyHeader = {}));
    var ClientType;
    (function(ClientType2) {
      ClientType2["Rest"] = "rest";
      ClientType2["Graphql"] = "graphql";
    })(ClientType || (exports.ClientType = ClientType = {}));
    exports.privacyTopics = [
      "CUSTOMERS_DATA_REQUEST",
      "CUSTOMERS_REDACT",
      "SHOP_REDACT"
    ];
    var BillingInterval;
    (function(BillingInterval2) {
      BillingInterval2["OneTime"] = "ONE_TIME";
      BillingInterval2["Every30Days"] = "EVERY_30_DAYS";
      BillingInterval2["Annual"] = "ANNUAL";
      BillingInterval2["Usage"] = "USAGE";
    })(BillingInterval || (exports.BillingInterval = BillingInterval = {}));
    var BillingReplacementBehavior;
    (function(BillingReplacementBehavior2) {
      BillingReplacementBehavior2["ApplyImmediately"] = "APPLY_IMMEDIATELY";
      BillingReplacementBehavior2["ApplyOnNextBillingCycle"] = "APPLY_ON_NEXT_BILLING_CYCLE";
      BillingReplacementBehavior2["Standard"] = "STANDARD";
    })(BillingReplacementBehavior || (exports.BillingReplacementBehavior = BillingReplacementBehavior = {}));
  }
});

// node_modules/@shopify/shopify-api/lib/version.js
var require_version = __commonJS({
  "node_modules/@shopify/shopify-api/lib/version.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SHOPIFY_API_LIBRARY_VERSION = void 0;
    exports.SHOPIFY_API_LIBRARY_VERSION = "9.7.2";
  }
});

// node_modules/@shopify/shopify-api/lib/logger/log.js
var require_log = __commonJS({
  "node_modules/@shopify/shopify-api/lib/logger/log.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.log = void 0;
    var types_1 = require_types();
    function log(config) {
      return function(severity, message, context = {}) {
        if (severity > config.logger.level) {
          return;
        }
        const prefix = [];
        if (config.logger.timestamps) {
          prefix.push(`${(/* @__PURE__ */ new Date()).toISOString().slice(0, -5)}Z`);
        }
        let packageString = context.package || "shopify-api";
        delete context.package;
        switch (severity) {
          case types_1.LogSeverity.Debug:
            packageString = `${packageString}/DEBUG`;
            break;
          case types_1.LogSeverity.Info:
            packageString = `${packageString}/INFO`;
            break;
          case types_1.LogSeverity.Warning:
            packageString = `${packageString}/WARNING`;
            break;
          case types_1.LogSeverity.Error:
            packageString = `${packageString}/ERROR`;
            break;
        }
        prefix.push(packageString);
        const contextParts = [];
        Object.entries(context).forEach(([key, value]) => {
          contextParts.push(`${key}: ${value}`);
        });
        let suffix = "";
        if (contextParts.length > 0) {
          suffix = ` | {${contextParts.join(", ")}}`;
        }
        config.logger.log(severity, `[${prefix.join("] [")}] ${message}${suffix}`);
      };
    }
    exports.log = log;
  }
});

// node_modules/@shopify/shopify-api/lib/logger/index.js
var require_logger = __commonJS({
  "node_modules/@shopify/shopify-api/lib/logger/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.logger = void 0;
    var compare_versions_1 = (init_esm(), __toCommonJS(esm_exports));
    var types_1 = require_types();
    var error_1 = require_error();
    var version_1 = require_version();
    var log_1 = require_log();
    function logger(config) {
      const logFunction = (0, log_1.log)(config);
      return {
        log: logFunction,
        debug: async (message, context = {}) => logFunction(types_1.LogSeverity.Debug, message, context),
        info: async (message, context = {}) => logFunction(types_1.LogSeverity.Info, message, context),
        warning: async (message, context = {}) => logFunction(types_1.LogSeverity.Warning, message, context),
        error: async (message, context = {}) => logFunction(types_1.LogSeverity.Error, message, context),
        deprecated: deprecated(logFunction)
      };
    }
    exports.logger = logger;
    function deprecated(logFunction) {
      return function(version, message) {
        if ((0, compare_versions_1.compare)(version_1.SHOPIFY_API_LIBRARY_VERSION, version, ">=")) {
          throw new error_1.FeatureDeprecatedError(`Feature was deprecated in version ${version}`);
        }
        return logFunction(types_1.LogSeverity.Warning, `[Deprecated | ${version}] ${message}`);
      };
    }
  }
});

// node_modules/@shopify/shopify-api/runtime/platform/types.js
var require_types2 = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/platform/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@shopify/shopify-api/runtime/platform/runtime-string.js
var require_runtime_string = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/platform/runtime-string.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setAbstractRuntimeString = exports.abstractRuntimeString = void 0;
    var abstractRuntimeString = () => {
      throw new Error("Missing adapter implementation for 'abstractRuntimeString' - make sure to import the appropriate adapter for your platform");
    };
    exports.abstractRuntimeString = abstractRuntimeString;
    function setAbstractRuntimeString(func) {
      exports.abstractRuntimeString = func;
    }
    exports.setAbstractRuntimeString = setAbstractRuntimeString;
  }
});

// node_modules/@shopify/shopify-api/runtime/platform/index.js
var require_platform = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/platform/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_types2(), exports);
    tslib_1.__exportStar(require_runtime_string(), exports);
  }
});

// node_modules/@shopify/shopify-api/lib/clients/admin/types.js
var require_types3 = __commonJS({
  "node_modules/@shopify/shopify-api/lib/clients/admin/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@shopify/shopify-api/lib/clients/graphql_proxy/types.js
var require_types4 = __commonJS({
  "node_modules/@shopify/shopify-api/lib/clients/graphql_proxy/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@shopify/shopify-api/runtime/crypto/crypto.js
var require_crypto = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/crypto/crypto.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.crypto = exports.setCrypto = void 0;
    var cryptoVar;
    try {
      exports.crypto = cryptoVar = crypto;
    } catch (_e) {
    }
    function setCrypto(crypto2) {
      exports.crypto = cryptoVar = crypto2;
    }
    exports.setCrypto = setCrypto;
  }
});

// node_modules/@shopify/shopify-api/runtime/crypto/types.js
var require_types5 = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/crypto/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HashFormat = void 0;
    var HashFormat;
    (function(HashFormat2) {
      HashFormat2["Base64"] = "base64";
      HashFormat2["Hex"] = "hex";
    })(HashFormat || (exports.HashFormat = HashFormat = {}));
  }
});

// node_modules/@shopify/shopify-api/runtime/crypto/utils.js
var require_utils = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/crypto/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.hashString = exports.asBase64 = exports.asHex = exports.createSHA256HMAC = void 0;
    var error_1 = require_error();
    var crypto_1 = require_crypto();
    var types_1 = require_types5();
    async function createSHA256HMAC(secret, payload, returnFormat = types_1.HashFormat.Base64) {
      var _a;
      const cryptoLib = typeof ((_a = crypto_1.crypto) == null ? void 0 : _a.webcrypto) === "undefined" ? crypto_1.crypto : crypto_1.crypto.webcrypto;
      const enc = new TextEncoder();
      const key = await cryptoLib.subtle.importKey("raw", enc.encode(secret), {
        name: "HMAC",
        hash: { name: "SHA-256" }
      }, false, ["sign"]);
      const signature = await cryptoLib.subtle.sign("HMAC", key, enc.encode(payload));
      return returnFormat === types_1.HashFormat.Base64 ? asBase64(signature) : asHex(signature);
    }
    exports.createSHA256HMAC = createSHA256HMAC;
    function asHex(buffer) {
      return [...new Uint8Array(buffer)].map((byte) => byte.toString(16).padStart(2, "0")).join("");
    }
    exports.asHex = asHex;
    var LookupTable = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    function asBase64(buffer) {
      let output = "";
      const input = new Uint8Array(buffer);
      for (let i = 0; i < input.length; ) {
        const byte1 = input[i++];
        const byte2 = input[i++];
        const byte3 = input[i++];
        const enc1 = byte1 >> 2;
        const enc2 = (byte1 & 3) << 4 | byte2 >> 4;
        let enc3 = (byte2 & 15) << 2 | byte3 >> 6;
        let enc4 = byte3 & 63;
        if (isNaN(byte2)) {
          enc3 = 64;
        }
        if (isNaN(byte3)) {
          enc4 = 64;
        }
        output += LookupTable[enc1] + LookupTable[enc2] + LookupTable[enc3] + LookupTable[enc4];
      }
      return output;
    }
    exports.asBase64 = asBase64;
    function hashString(str, returnFormat) {
      const buffer = new TextEncoder().encode(str);
      switch (returnFormat) {
        case types_1.HashFormat.Base64:
          return asBase64(buffer);
        case types_1.HashFormat.Hex:
          return asHex(buffer);
        default:
          throw new error_1.ShopifyError(`Unrecognized hash format '${returnFormat}'`);
      }
    }
    exports.hashString = hashString;
  }
});

// node_modules/@shopify/shopify-api/runtime/http/utils.js
var require_utils2 = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/http/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.splitN = void 0;
    function splitN(str, sep, maxNumParts) {
      const parts = str.split(sep);
      const maxParts = Math.min(Math.abs(maxNumParts), parts.length);
      return [...parts.slice(0, maxParts - 1), parts.slice(maxParts - 1).join(sep)];
    }
    exports.splitN = splitN;
  }
});

// node_modules/@shopify/shopify-api/runtime/http/headers.js
var require_headers = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/http/headers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.flatHeaders = exports.removeHeader = exports.canonicalizeHeaders = exports.addHeader = exports.setHeader = exports.getHeader = exports.getHeaders = exports.canonicalizeHeaderName = void 0;
    function canonicalizeHeaderName(hdr) {
      return hdr.replace(/(^|-)(\w+)/g, (_fullMatch, start, letters) => start + letters.slice(0, 1).toUpperCase() + letters.slice(1).toLowerCase());
    }
    exports.canonicalizeHeaderName = canonicalizeHeaderName;
    function getHeaders(headers, needle_) {
      const result = [];
      if (!headers)
        return result;
      const needle = canonicalizeHeaderName(needle_);
      for (const [key, values] of Object.entries(headers)) {
        if (canonicalizeHeaderName(key) !== needle)
          continue;
        if (Array.isArray(values)) {
          result.push(...values);
        } else {
          result.push(values);
        }
      }
      return result;
    }
    exports.getHeaders = getHeaders;
    function getHeader(headers, needle) {
      var _a;
      if (!headers)
        return void 0;
      return (_a = getHeaders(headers, needle)) == null ? void 0 : _a[0];
    }
    exports.getHeader = getHeader;
    function setHeader(headers, key, value) {
      canonicalizeHeaders(headers);
      headers[canonicalizeHeaderName(key)] = [value];
    }
    exports.setHeader = setHeader;
    function addHeader(headers, key, value) {
      canonicalizeHeaders(headers);
      const canonKey = canonicalizeHeaderName(key);
      let list = headers[canonKey];
      if (!list) {
        list = [];
      } else if (!Array.isArray(list)) {
        list = [list];
      }
      headers[canonKey] = list;
      list.push(value);
    }
    exports.addHeader = addHeader;
    function canonicalizeValue(value) {
      if (typeof value === "number")
        return value.toString();
      return value;
    }
    function canonicalizeHeaders(hdr) {
      for (const [key, values] of Object.entries(hdr)) {
        const canonKey = canonicalizeHeaderName(key);
        if (!hdr[canonKey])
          hdr[canonKey] = [];
        if (!Array.isArray(hdr[canonKey]))
          hdr[canonKey] = [canonicalizeValue(hdr[canonKey])];
        if (key === canonKey)
          continue;
        delete hdr[key];
        hdr[canonKey].push(...[values].flat().map((value) => canonicalizeValue(value)));
      }
      return hdr;
    }
    exports.canonicalizeHeaders = canonicalizeHeaders;
    function removeHeader(headers, needle) {
      canonicalizeHeaders(headers);
      const canonKey = canonicalizeHeaderName(needle);
      delete headers[canonKey];
    }
    exports.removeHeader = removeHeader;
    function flatHeaders(headers) {
      return Object.entries(headers).flatMap(([header, values]) => Array.isArray(values) ? values.map((value) => [header, value]) : [[header, values]]);
    }
    exports.flatHeaders = flatHeaders;
  }
});

// node_modules/@shopify/shopify-api/runtime/http/cookies.js
var require_cookies = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/http/cookies.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Cookies = void 0;
    var utils_1 = require_utils();
    var utils_2 = require_utils2();
    var headers_1 = require_headers();
    var Cookies = class _Cookies {
      static parseCookies(hdrs) {
        const entries = hdrs.filter((hdr) => hdr.trim().length > 0).map((cookieDef) => {
          const [keyval, ...opts] = cookieDef.split(";");
          const [name, value] = (0, utils_2.splitN)(keyval, "=", 2).map((value2) => value2.trim());
          return [
            name,
            {
              name,
              value,
              ...Object.fromEntries(opts.map((opt) => (0, utils_2.splitN)(opt, "=", 2).map((value2) => value2.trim())))
            }
          ];
        });
        const jar = Object.fromEntries(entries);
        for (const cookie of Object.values(jar)) {
          if (typeof cookie.expires === "string") {
            cookie.expires = new Date(cookie.expires);
          }
        }
        return jar;
      }
      static encodeCookie(data) {
        let result = "";
        result += `${data.name}=${data.value};`;
        result += Object.entries(data).filter(([key]) => !["name", "value", "expires"].includes(key)).map(([key, value]) => `${key}=${value}`).join("; ");
        if (data.expires) {
          result += ";";
          result += `expires=${data.expires.toUTCString()}`;
        }
        return result;
      }
      constructor(request, response, { keys = [] } = {}) {
        this.response = response;
        this.receivedCookieJar = {};
        this.outgoingCookieJar = {};
        this.keys = [];
        if (keys)
          this.keys = keys;
        const cookieReqHdr = (0, headers_1.getHeader)(request.headers, "Cookie") ?? "";
        this.receivedCookieJar = _Cookies.parseCookies(cookieReqHdr.split(";"));
        const cookieResHdr = (0, headers_1.getHeaders)(response.headers, "Set-Cookie") ?? [];
        this.outgoingCookieJar = _Cookies.parseCookies(cookieResHdr);
      }
      toHeaders() {
        return Object.values(this.outgoingCookieJar).map((cookie) => _Cookies.encodeCookie(cookie));
      }
      updateHeader() {
        if (!this.response.headers) {
          this.response.headers = {};
        }
        (0, headers_1.removeHeader)(this.response.headers, "Set-Cookie");
        this.toHeaders().map((hdr) => (0, headers_1.addHeader)(this.response.headers, "Set-Cookie", hdr));
      }
      get(name) {
        var _a;
        return (_a = this.receivedCookieJar[name]) == null ? void 0 : _a.value;
      }
      deleteCookie(name) {
        this.set(name, "", {
          path: "/",
          expires: /* @__PURE__ */ new Date(0)
        });
      }
      async getAndVerify(name) {
        const value = this.get(name);
        if (!value)
          return void 0;
        if (!await this.isSignedCookieValid(name)) {
          return void 0;
        }
        return value;
      }
      get canSign() {
        var _a;
        return ((_a = this.keys) == null ? void 0 : _a.length) > 0;
      }
      set(name, value, opts = {}) {
        this.outgoingCookieJar[name] = {
          ...opts,
          name,
          value
        };
        this.updateHeader();
      }
      async setAndSign(name, value, opts = {}) {
        if (!this.canSign) {
          throw Error("No keys provided for signing.");
        }
        this.set(name, value, opts);
        const sigName = `${name}.sig`;
        const signature = await (0, utils_1.createSHA256HMAC)(this.keys[0], value);
        this.set(sigName, signature, opts);
        this.updateHeader();
      }
      async isSignedCookieValid(cookieName) {
        const signedCookieName = `${cookieName}.sig`;
        if (!this.get(cookieName) || !this.get(signedCookieName)) {
          this.deleteCookie(signedCookieName);
          this.deleteCookie(cookieName);
          return false;
        }
        const value = this.get(cookieName);
        const signature = this.get(signedCookieName);
        const allCheckSignatures = await Promise.all(this.keys.map((key) => (0, utils_1.createSHA256HMAC)(key, value)));
        if (!allCheckSignatures.includes(signature)) {
          this.deleteCookie(signedCookieName);
          this.deleteCookie(cookieName);
          return false;
        }
        return true;
      }
    };
    exports.Cookies = Cookies;
  }
});

// node_modules/@shopify/shopify-api/runtime/http/types.js
var require_types6 = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/http/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@shopify/shopify-api/runtime/http/index.js
var require_http = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/http/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setAbstractConvertHeadersFunc = exports.abstractConvertHeaders = exports.setAbstractConvertResponseFunc = exports.abstractConvertResponse = exports.setAbstractConvertIncomingResponseFunc = exports.abstractConvertIncomingResponse = exports.setAbstractConvertRequestFunc = exports.abstractConvertRequest = exports.setAbstractFetchFunc = exports.abstractFetch = exports.isOK = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_cookies(), exports);
    tslib_1.__exportStar(require_headers(), exports);
    tslib_1.__exportStar(require_utils2(), exports);
    tslib_1.__exportStar(require_types6(), exports);
    function isOK(resp) {
      return resp.statusCode >= 200 && resp.statusCode <= 299;
    }
    exports.isOK = isOK;
    var abstractFetch = () => {
      throw new Error("Missing adapter implementation for 'abstractFetch' - make sure to import the appropriate adapter for your platform");
    };
    exports.abstractFetch = abstractFetch;
    function setAbstractFetchFunc(func) {
      exports.abstractFetch = func;
    }
    exports.setAbstractFetchFunc = setAbstractFetchFunc;
    var abstractConvertRequest = () => {
      throw new Error("Missing adapter implementation for 'abstractConvertRequest' - make sure to import the appropriate adapter for your platform");
    };
    exports.abstractConvertRequest = abstractConvertRequest;
    function setAbstractConvertRequestFunc(func) {
      exports.abstractConvertRequest = func;
    }
    exports.setAbstractConvertRequestFunc = setAbstractConvertRequestFunc;
    var abstractConvertIncomingResponse = () => Promise.resolve({});
    exports.abstractConvertIncomingResponse = abstractConvertIncomingResponse;
    function setAbstractConvertIncomingResponseFunc(func) {
      exports.abstractConvertIncomingResponse = func;
    }
    exports.setAbstractConvertIncomingResponseFunc = setAbstractConvertIncomingResponseFunc;
    var abstractConvertResponse = () => {
      throw new Error("Missing adapter implementation for 'abstractConvertResponse' - make sure to import the appropriate adapter for your platform");
    };
    exports.abstractConvertResponse = abstractConvertResponse;
    function setAbstractConvertResponseFunc(func) {
      exports.abstractConvertResponse = func;
    }
    exports.setAbstractConvertResponseFunc = setAbstractConvertResponseFunc;
    var abstractConvertHeaders = () => {
      throw new Error("Missing adapter implementation for 'abstractConvertHeaders' - make sure to import the appropriate adapter for your platform");
    };
    exports.abstractConvertHeaders = abstractConvertHeaders;
    function setAbstractConvertHeadersFunc(func) {
      exports.abstractConvertHeaders = func;
    }
    exports.setAbstractConvertHeadersFunc = setAbstractConvertHeadersFunc;
  }
});

// node_modules/@shopify/shopify-api/runtime/crypto/index.js
var require_crypto2 = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/crypto/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_types5(), exports);
    tslib_1.__exportStar(require_crypto(), exports);
    tslib_1.__exportStar(require_utils(), exports);
  }
});

// node_modules/@shopify/shopify-api/runtime/index.js
var require_runtime = __commonJS({
  "node_modules/@shopify/shopify-api/runtime/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_http(), exports);
    tslib_1.__exportStar(require_crypto2(), exports);
    tslib_1.__exportStar(require_platform(), exports);
  }
});

// node_modules/@shopify/network/build/cjs/network.js
var require_network = __commonJS({
  "node_modules/@shopify/network/build/cjs/network.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Method = void 0;
    (function(Method) {
      Method["Get"] = "GET";
      Method["Post"] = "POST";
      Method["Put"] = "PUT";
      Method["Patch"] = "PATCH";
      Method["Delete"] = "DELETE";
      Method["Head"] = "HEAD";
      Method["Options"] = "OPTIONS";
      Method["Connect"] = "CONNECT";
    })(exports.Method || (exports.Method = {}));
    exports.StatusCode = void 0;
    (function(StatusCode) {
      StatusCode[StatusCode["Continue"] = 100] = "Continue";
      StatusCode[StatusCode["SwitchingProtocols"] = 101] = "SwitchingProtocols";
      StatusCode[StatusCode["Ok"] = 200] = "Ok";
      StatusCode[StatusCode["Created"] = 201] = "Created";
      StatusCode[StatusCode["Accepted"] = 202] = "Accepted";
      StatusCode[StatusCode["NonAuthoritativeInformation"] = 203] = "NonAuthoritativeInformation";
      StatusCode[StatusCode["NoContent"] = 204] = "NoContent";
      StatusCode[StatusCode["ResetContent"] = 205] = "ResetContent";
      StatusCode[StatusCode["PartialContent"] = 206] = "PartialContent";
      StatusCode[StatusCode["MultipleChoices"] = 300] = "MultipleChoices";
      StatusCode[StatusCode["MovedPermanently"] = 301] = "MovedPermanently";
      StatusCode[StatusCode["Found"] = 302] = "Found";
      StatusCode[StatusCode["SeeOther"] = 303] = "SeeOther";
      StatusCode[StatusCode["NotModified"] = 304] = "NotModified";
      StatusCode[StatusCode["UseProxy"] = 305] = "UseProxy";
      StatusCode[StatusCode["TemporaryRedirect"] = 307] = "TemporaryRedirect";
      StatusCode[StatusCode["BadRequest"] = 400] = "BadRequest";
      StatusCode[StatusCode["Unauthorized"] = 401] = "Unauthorized";
      StatusCode[StatusCode["PaymentRequired"] = 402] = "PaymentRequired";
      StatusCode[StatusCode["Forbidden"] = 403] = "Forbidden";
      StatusCode[StatusCode["NotFound"] = 404] = "NotFound";
      StatusCode[StatusCode["MethodNotAllowed"] = 405] = "MethodNotAllowed";
      StatusCode[StatusCode["NotAcceptable"] = 406] = "NotAcceptable";
      StatusCode[StatusCode["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
      StatusCode[StatusCode["RequestTimeout"] = 408] = "RequestTimeout";
      StatusCode[StatusCode["Conflict"] = 409] = "Conflict";
      StatusCode[StatusCode["Gone"] = 410] = "Gone";
      StatusCode[StatusCode["LengthRequired"] = 411] = "LengthRequired";
      StatusCode[StatusCode["PreconditionFailed"] = 412] = "PreconditionFailed";
      StatusCode[StatusCode["RequestEntityTooLarge"] = 413] = "RequestEntityTooLarge";
      StatusCode[StatusCode["RequestUriTooLong"] = 414] = "RequestUriTooLong";
      StatusCode[StatusCode["UnsupportedMediaType"] = 415] = "UnsupportedMediaType";
      StatusCode[StatusCode["RequestedRangeNotSatisfiable"] = 416] = "RequestedRangeNotSatisfiable";
      StatusCode[StatusCode["ExpectationFailed"] = 417] = "ExpectationFailed";
      StatusCode[StatusCode["ImATeapot"] = 418] = "ImATeapot";
      StatusCode[StatusCode["UnprocessableEntity"] = 422] = "UnprocessableEntity";
      StatusCode[StatusCode["TooManyRequests"] = 429] = "TooManyRequests";
      StatusCode[StatusCode["InternalServerError"] = 500] = "InternalServerError";
      StatusCode[StatusCode["NotImplemented"] = 501] = "NotImplemented";
      StatusCode[StatusCode["BadGateway"] = 502] = "BadGateway";
      StatusCode[StatusCode["ServiceUnavailable"] = 503] = "ServiceUnavailable";
      StatusCode[StatusCode["GatewayTimeout"] = 504] = "GatewayTimeout";
      StatusCode[StatusCode["HttpVersionNotSupported"] = 505] = "HttpVersionNotSupported";
    })(exports.StatusCode || (exports.StatusCode = {}));
    exports.Header = void 0;
    (function(Header) {
      Header["Accept"] = "Accept";
      Header["AcceptEncoding"] = "Accept-Encoding";
      Header["AcceptLanguage"] = "Accept-Language";
      Header["AccessControlAllowCredentials"] = "Access-Control-Allow-Credentials";
      Header["AccessControlAllowHeaders"] = "Access-Control-Allow-Headers";
      Header["AccessControlAllowMethods"] = "Access-Control-Allow-Methods";
      Header["AccessControlAllowOrigin"] = "Access-Control-Allow-Origin";
      Header["AccessControlExposeHeaders"] = "Access-Control-Expose-Headers";
      Header["AccessControlMaxAge"] = "Access-Control-Max-Age";
      Header["AccessControlRequestHeaders"] = "Access-Control-Request-Headers";
      Header["AccessControlRequestMethod"] = "Access-Control-Request-Method";
      Header["Authorization"] = "Authorization";
      Header["CacheControl"] = "Cache-Control";
      Header["CacheStatus"] = "Cache-Status";
      Header["Connection"] = "Connection";
      Header["ContentDisposition"] = "Content-Disposition";
      Header["ContentEncoding"] = "Content-Encoding";
      Header["ContentLength"] = "Content-Length";
      Header["ContentSecurityPolicy"] = "Content-Security-Policy";
      Header["ContentSecurityPolicyReportOnly"] = "Content-Security-Policy-Report-Only";
      Header["ContentType"] = "Content-Type";
      Header["ContentTypeOptions"] = "X-Content-Type-Options";
      Header["Cookie"] = "Cookie";
      Header["DownloadOptions"] = "X-Download-Options";
      Header["ETag"] = "ETag";
      Header["Forwarded"] = "Forwarded";
      Header["ForwardedFor"] = "X-Forwarded-For";
      Header["ForwardedHost"] = "X-Forwarded-Host";
      Header["ForwardedProtocol"] = "X-Forwarded-Proto";
      Header["FrameOptions"] = "X-Frame-Options";
      Header["Host"] = "Host";
      Header["IfNoneMatch"] = "If-None-Match";
      Header["Location"] = "Location";
      Header["Origin"] = "Origin";
      Header["ReferrerPolicy"] = "Referrer-Policy";
      Header["ServerTiming"] = "Server-Timing";
      Header["StrictTransportSecurity"] = "Strict-Transport-Security";
      Header["TimingAllowOrigin"] = "Timing-Allow-Origin";
      Header["Trailer"] = "Trailer";
      Header["TransferEncoding"] = "Transfer-Encoding";
      Header["UserAgent"] = "User-Agent";
      Header["WwwAuthenticate"] = "WWW-Authenticate";
      Header["XhrRedirectedTo"] = "X-XHR-Redirected-To";
      Header["XhrReferer"] = "X-XHR-Referer";
      Header["XssProtecton"] = "X-XSS-Protection";
      Header["XContentTypeOptions"] = "X-Content-Type-Options";
      Header["XDownloadOptions"] = "X-Download-Options";
      Header["XForwardedFor"] = "X-Forwarded-For";
      Header["XForwardedHost"] = "X-Forwarded-Host";
      Header["XForwardedProto"] = "X-Forwarded-Proto";
      Header["XFrameOptions"] = "X-Frame-Options";
      Header["XXhrRedirectedTo"] = "X-XHR-Redirected-To";
      Header["XXhrReferer"] = "X-XHR-Referer";
      Header["XXssProtecton"] = "X-XSS-Protection";
      Header["XXssProtection"] = "X-XSS-Protection";
    })(exports.Header || (exports.Header = {}));
    exports.CspDirective = void 0;
    (function(CspDirective) {
      CspDirective["ChildSrc"] = "child-src";
      CspDirective["ConnectSrc"] = "connect-src";
      CspDirective["DefaultSrc"] = "default-src";
      CspDirective["FontSrc"] = "font-src";
      CspDirective["FrameSrc"] = "frame-src";
      CspDirective["ImgSrc"] = "img-src";
      CspDirective["ManifestSrc"] = "manifest-src";
      CspDirective["MediaSrc"] = "media-src";
      CspDirective["ObjectSrc"] = "object-src";
      CspDirective["PrefetchSrc"] = "prefetch-src";
      CspDirective["ScriptSrc"] = "script-src";
      CspDirective["StyleSrc"] = "style-src";
      CspDirective["WebrtcSrc"] = "webrtc-src";
      CspDirective["WorkerSrc"] = "worker-src";
      CspDirective["BaseUri"] = "base-uri";
      CspDirective["PluginTypes"] = "plugin-types";
      CspDirective["Sandbox"] = "sandbox";
      CspDirective["FormAction"] = "form-action";
      CspDirective["FrameAncestors"] = "frame-ancestors";
      CspDirective["ReportUri"] = "report-uri";
      CspDirective["BlockAllMixedContent"] = "block-all-mixed-content";
      CspDirective["RequireSriFor"] = "require-sri-for";
      CspDirective["UpgradeInsecureRequests"] = "upgrade-insecure-requests";
    })(exports.CspDirective || (exports.CspDirective = {}));
    exports.CspSandboxAllow = void 0;
    (function(CspSandboxAllow) {
      CspSandboxAllow["Forms"] = "allow-forms";
      CspSandboxAllow["SameOrigin"] = "allow-same-origin";
      CspSandboxAllow["Scripts"] = "allow-scripts";
      CspSandboxAllow["Popups"] = "allow-popups";
      CspSandboxAllow["Modals"] = "allow-modals";
      CspSandboxAllow["OrientationLock"] = "allow-orientation-lock";
      CspSandboxAllow["PointerLock"] = "allow-pointer-lock";
      CspSandboxAllow["Presentation"] = "allow-presentation";
      CspSandboxAllow["PopupsToEscapeSandbox"] = "allow-popups-to-escape-sandbox";
      CspSandboxAllow["TopNavigation"] = "allow-top-navigation";
    })(exports.CspSandboxAllow || (exports.CspSandboxAllow = {}));
    exports.SpecialSource = void 0;
    (function(SpecialSource) {
      SpecialSource["Any"] = "*";
      SpecialSource["Self"] = "'self'";
      SpecialSource["UnsafeInline"] = "'unsafe-inline'";
      SpecialSource["UnsafeEval"] = "'unsafe-eval'";
      SpecialSource["None"] = "'none'";
      SpecialSource["StrictDynamic"] = "'strict-dynamic'";
      SpecialSource["ReportSample"] = "'report-sample'";
      SpecialSource["Data"] = "data:";
      SpecialSource["Blob"] = "blob:";
      SpecialSource["FileSystem"] = "filesystem:";
    })(exports.SpecialSource || (exports.SpecialSource = {}));
    exports.SriAsset = void 0;
    (function(SriAsset) {
      SriAsset["Script"] = "script";
      SriAsset["Style"] = "style";
    })(exports.SriAsset || (exports.SriAsset = {}));
    exports.HashAlgorithm = void 0;
    (function(HashAlgorithm) {
      HashAlgorithm["Sha256"] = "sha256";
      HashAlgorithm["Sha384"] = "sha384";
      HashAlgorithm["Sha512"] = "sha512";
    })(exports.HashAlgorithm || (exports.HashAlgorithm = {}));
    exports.ResponseType = void 0;
    (function(ResponseType) {
      ResponseType["Informational"] = "1xx";
      ResponseType["Success"] = "2xx";
      ResponseType["Redirection"] = "3xx";
      ResponseType["ClientError"] = "4xx";
      ResponseType["ServerError"] = "5xx";
      ResponseType["Unknown"] = "Unknown";
    })(exports.ResponseType || (exports.ResponseType = {}));
    function getResponseType(status) {
      if (status >= 100 && status < 200) {
        return exports.ResponseType.Informational;
      } else if (status >= 200 && status < 300) {
        return exports.ResponseType.Success;
      } else if (status >= 300 && status < 400) {
        return exports.ResponseType.Redirection;
      } else if (status >= 400 && status < 500) {
        return exports.ResponseType.ClientError;
      } else if (status >= 500 && status < 600) {
        return exports.ResponseType.ServerError;
      } else {
        return exports.ResponseType.Unknown;
      }
    }
    function nonceSource(nonce) {
      return `'nonce-${nonce}'`;
    }
    function hashSource(hashAlgorithm, value) {
      return `'${hashAlgorithm}-${value}'`;
    }
    exports.CacheControl = void 0;
    (function(CacheControl) {
      CacheControl["NoCache"] = "no-cache";
      CacheControl["NoStore"] = "no-store";
      CacheControl["MustRevalidate"] = "must-revalidate";
      CacheControl["MaxAge"] = "max-age";
    })(exports.CacheControl || (exports.CacheControl = {}));
    var noCache = `${exports.CacheControl.NoCache},${exports.CacheControl.NoStore},${exports.CacheControl.MustRevalidate},${exports.CacheControl.MaxAge}=0`;
    exports.getResponseType = getResponseType;
    exports.hashSource = hashSource;
    exports.noCache = noCache;
    exports.nonceSource = nonceSource;
  }
});

// node_modules/@shopify/network/build/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/@shopify/network/build/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var network = require_network();
    Object.defineProperty(exports, "CacheControl", {
      enumerable: true,
      get: function() {
        return network.CacheControl;
      }
    });
    Object.defineProperty(exports, "CspDirective", {
      enumerable: true,
      get: function() {
        return network.CspDirective;
      }
    });
    Object.defineProperty(exports, "CspSandboxAllow", {
      enumerable: true,
      get: function() {
        return network.CspSandboxAllow;
      }
    });
    Object.defineProperty(exports, "HashAlgorithm", {
      enumerable: true,
      get: function() {
        return network.HashAlgorithm;
      }
    });
    Object.defineProperty(exports, "Header", {
      enumerable: true,
      get: function() {
        return network.Header;
      }
    });
    Object.defineProperty(exports, "Method", {
      enumerable: true,
      get: function() {
        return network.Method;
      }
    });
    Object.defineProperty(exports, "ResponseType", {
      enumerable: true,
      get: function() {
        return network.ResponseType;
      }
    });
    Object.defineProperty(exports, "SpecialSource", {
      enumerable: true,
      get: function() {
        return network.SpecialSource;
      }
    });
    Object.defineProperty(exports, "SriAsset", {
      enumerable: true,
      get: function() {
        return network.SriAsset;
      }
    });
    Object.defineProperty(exports, "StatusCode", {
      enumerable: true,
      get: function() {
        return network.StatusCode;
      }
    });
    exports.getResponseType = network.getResponseType;
    exports.hashSource = network.hashSource;
    exports.noCache = network.noCache;
    exports.nonceSource = network.nonceSource;
  }
});

// node_modules/@shopify/network/index.js
var require_network2 = __commonJS({
  "node_modules/@shopify/network/index.js"(exports, module) {
    module.exports = require_cjs();
  }
});

// node_modules/@shopify/shopify-api/lib/clients/common.js
var require_common = __commonJS({
  "node_modules/@shopify/shopify-api/lib/clients/common.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.throwFailedRequest = exports.clientLoggerFactory = exports.getUserAgent = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var network_1 = require_network2();
    var ShopifyErrors = tslib_1.__importStar(require_error());
    var types_1 = require_types();
    var version_1 = require_version();
    var runtime_1 = require_runtime();
    var logger_1 = require_logger();
    function getUserAgent(config) {
      let userAgentPrefix = `${types_1.LIBRARY_NAME} v${version_1.SHOPIFY_API_LIBRARY_VERSION} | ${(0, runtime_1.abstractRuntimeString)()}`;
      if (config.userAgentPrefix) {
        userAgentPrefix = `${config.userAgentPrefix} | ${userAgentPrefix}`;
      }
      return userAgentPrefix;
    }
    exports.getUserAgent = getUserAgent;
    function clientLoggerFactory(config) {
      return (logContent) => {
        if (config.logger.httpRequests) {
          switch (logContent.type) {
            case "HTTP-Response": {
              const responseLog = logContent.content;
              (0, logger_1.logger)(config).debug("Received response for HTTP request", {
                requestParams: JSON.stringify(responseLog.requestParams),
                response: JSON.stringify(responseLog.response)
              });
              break;
            }
            case "HTTP-Retry": {
              const responseLog = logContent.content;
              (0, logger_1.logger)(config).debug("Retrying HTTP request", {
                requestParams: JSON.stringify(responseLog.requestParams),
                retryAttempt: responseLog.retryAttempt,
                maxRetries: responseLog.maxRetries,
                response: JSON.stringify(responseLog.lastResponse)
              });
              break;
            }
            default: {
              (0, logger_1.logger)(config).debug(`HTTP request event: ${logContent.content}`);
              break;
            }
          }
        }
      };
    }
    exports.clientLoggerFactory = clientLoggerFactory;
    function throwFailedRequest(body, atMaxRetries, response) {
      var _a, _b;
      if (typeof response === "undefined") {
        const message = ((_a = body == null ? void 0 : body.errors) == null ? void 0 : _a.message) ?? "";
        throw new ShopifyErrors.HttpRequestError(`Http request error, no response available: ${message}`);
      }
      const responseHeaders = (0, runtime_1.canonicalizeHeaders)(Object.fromEntries(response.headers.entries() ?? []));
      if (response.status === network_1.StatusCode.Ok && body.errors.graphQLErrors) {
        throw new ShopifyErrors.GraphqlQueryError({
          message: ((_b = body.errors.graphQLErrors) == null ? void 0 : _b[0].message) ?? "GraphQL operation failed",
          response,
          headers: responseHeaders,
          body
        });
      }
      const errorMessages = [];
      if (body.errors) {
        errorMessages.push(JSON.stringify(body.errors, null, 2));
      }
      const xRequestId = (0, runtime_1.getHeader)(responseHeaders, "x-request-id");
      if (xRequestId) {
        errorMessages.push(`If you report this error, please include this id: ${xRequestId}`);
      }
      const errorMessage = errorMessages.length ? `:
${errorMessages.join("\n")}` : "";
      const code = response.status;
      const statusText = response.statusText;
      switch (true) {
        case response.status === network_1.StatusCode.TooManyRequests: {
          if (atMaxRetries) {
            throw new ShopifyErrors.HttpMaxRetriesError("Attempted the maximum number of retries for HTTP request.");
          } else {
            const retryAfter = (0, runtime_1.getHeader)(responseHeaders, "Retry-After");
            throw new ShopifyErrors.HttpThrottlingError({
              message: `Shopify is throttling requests ${errorMessage}`,
              code,
              statusText,
              body,
              headers: responseHeaders,
              retryAfter: retryAfter ? parseFloat(retryAfter) : void 0
            });
          }
        }
        case response.status >= network_1.StatusCode.InternalServerError:
          if (atMaxRetries) {
            throw new ShopifyErrors.HttpMaxRetriesError("Attempted the maximum number of retries for HTTP request.");
          } else {
            throw new ShopifyErrors.HttpInternalError({
              message: `Shopify internal error${errorMessage}`,
              code,
              statusText,
              body,
              headers: responseHeaders
            });
          }
        default:
          throw new ShopifyErrors.HttpResponseError({
            message: `Received an error response (${response.status} ${response.statusText}) from Shopify${errorMessage}`,
            code,
            statusText,
            body,
            headers: responseHeaders
          });
      }
    }
    exports.throwFailedRequest = throwFailedRequest;
  }
});

// node_modules/@shopify/shopify-api/lib/clients/admin/graphql/client.js
var require_client = __commonJS({
  "node_modules/@shopify/shopify-api/lib/clients/admin/graphql/client.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.graphqlClientClass = exports.GraphqlClient = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var admin_api_client_1 = (init_dist(), __toCommonJS(dist_exports));
    var logger_1 = require_logger();
    var ShopifyErrors = tslib_1.__importStar(require_error());
    var runtime_1 = require_runtime();
    var common_1 = require_common();
    var GraphqlClient = class {
      constructor(params) {
        const config = this.graphqlClass().config;
        if (!config.isCustomStoreApp && !params.session.accessToken) {
          throw new ShopifyErrors.MissingRequiredArgument("Missing access token when creating GraphQL client");
        }
        if (params.apiVersion) {
          const message = params.apiVersion === config.apiVersion ? `Admin client has a redundant API version override to the default ${params.apiVersion}` : `Admin client overriding default API version ${config.apiVersion} with ${params.apiVersion}`;
          (0, logger_1.logger)(config).debug(message);
        }
        this.session = params.session;
        this.apiVersion = params.apiVersion;
        this.client = (0, admin_api_client_1.createAdminApiClient)({
          accessToken: config.adminApiAccessToken ?? this.session.accessToken,
          apiVersion: this.apiVersion ?? config.apiVersion,
          storeDomain: this.session.shop,
          customFetchApi: runtime_1.abstractFetch,
          logger: (0, common_1.clientLoggerFactory)(config),
          userAgentPrefix: (0, common_1.getUserAgent)(config)
        });
      }
      async query(params) {
        (0, logger_1.logger)(this.graphqlClass().config).deprecated("10.0.0", "The query method is deprecated, and was replaced with the request method.\nSee the migration guide: https://github.com/Shopify/shopify-app-js/blob/main/packages/apps/shopify-api/docs/migrating-to-v9.md#using-the-new-clients.");
        if (typeof params.data === "string" && params.data.length === 0 || Object.entries(params.data).length === 0) {
          throw new ShopifyErrors.MissingRequiredArgument("Query missing.");
        }
        let operation;
        let variables;
        if (typeof params.data === "string") {
          operation = params.data;
        } else {
          operation = params.data.query;
          variables = params.data.variables;
        }
        const headers = Object.fromEntries(Object.entries((params == null ? void 0 : params.extraHeaders) ?? {}).map(([key, value]) => [
          key,
          Array.isArray(value) ? value.join(", ") : value.toString()
        ]));
        const response = await this.request(operation, {
          headers,
          retries: params.tries ? params.tries - 1 : void 0,
          variables
        });
        return { body: response, headers: {} };
      }
      async request(operation, options) {
        const response = await this.client.request(operation, {
          apiVersion: this.apiVersion || this.graphqlClass().config.apiVersion,
          ...options
        });
        if (response.errors) {
          const fetchResponse = response.errors.response;
          (0, common_1.throwFailedRequest)(response, ((options == null ? void 0 : options.retries) ?? 0) > 0, fetchResponse);
        }
        return response;
      }
      graphqlClass() {
        return this.constructor;
      }
    };
    exports.GraphqlClient = GraphqlClient;
    function graphqlClientClass({ config }) {
      class NewGraphqlClient extends GraphqlClient {
      }
      NewGraphqlClient.config = config;
      Reflect.defineProperty(NewGraphqlClient, "name", {
        value: "GraphqlClient"
      });
      return NewGraphqlClient;
    }
    exports.graphqlClientClass = graphqlClientClass;
  }
});

// node_modules/@shopify/shopify-api/lib/clients/types.js
var require_types7 = __commonJS({
  "node_modules/@shopify/shopify-api/lib/clients/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GraphqlClient = exports.DataType = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_types3(), exports);
    tslib_1.__exportStar(require_types4(), exports);
    var DataType;
    (function(DataType2) {
      DataType2["JSON"] = "application/json";
      DataType2["GraphQL"] = "application/graphql";
      DataType2["URLEncoded"] = "application/x-www-form-urlencoded";
    })(DataType || (exports.DataType = DataType = {}));
    var client_1 = require_client();
    Object.defineProperty(exports, "GraphqlClient", { enumerable: true, get: function() {
      return client_1.GraphqlClient;
    } });
  }
});

export {
  require_error,
  require_types,
  require_version,
  require_logger,
  require_types5 as require_types2,
  require_http,
  require_crypto2 as require_crypto,
  require_platform,
  require_runtime,
  require_network2 as require_network,
  require_common,
  require_client,
  require_types7 as require_types3
};
//# sourceMappingURL=chunk-NXOUBC2U.js.map
